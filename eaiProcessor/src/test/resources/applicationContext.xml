<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
    ">

    <!-- Create an in memory database used for testing
         Note, jdbc:embedded-datasource was not usable as it didn't support the 'scope' attribute,
         which is needed for Cucumber tests for clearing down state which might affect other tests -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean" scope="cucumber-glue">
        <property name="databaseType" value="H2"/>
        <property name="databasePopulator">
            <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
                <property name="scripts">
                    <list>
                        <value>classpath:sql/rollback.sql</value>
                        <value>classpath:sql/db-schema.sql</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Allow spring to load all components from our controllers package -->
    <context:component-scan base-package="me.alanfoster.services"/>

    <!-- Scan classes for annotations - In particular @Required and @Autowired -->
    <context:annotation-config />
    <!-- Handle @Transaction annotations -->
    <tx:annotation-driven />

    <!-- Application Config property placeholder -->
    <bean id="eaiConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:eai.properties</value>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- Wire up our the webservice beans -->
    <import resource="classpath:webservice-context.xml" />

    <!--
        Create the CXF client/server ourselves for testing purposes
    -->

    <!-- Import the resources from the class path as per usual -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <import resource="classpath:webservice-context.xml" />

    <!-- Instantiate the jax-webservice endpoint -->
    <jaxws:endpoint implementor="me.alanfoster.employee.webservice.EmployeeWebservice" address="/EmployeeWebservice"/>

    <!-- CXF client -->
    <jaxws:client id="webserviceClient" serviceClass="me.alanfoster.employee.webservice.IEmployeeWebservice" address="http://localhost:8090/EmployeeWebservice?wsdl" />

</beans>