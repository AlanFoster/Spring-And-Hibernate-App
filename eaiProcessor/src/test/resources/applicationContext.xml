<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
    ">


    <!-- Application Config property placeholder -->
    <bean id="eaiConfigTesting" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
        <property name="locations">
            <list>
                <value>classpath:eai.properties</value>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- Allow spring to load all components -->
    <context:component-scan base-package="me.alanfoster"/>

    <!-- Import the in memory datasource, instead of the mysqlDataSourceBeans -->
    <import resource="classpath:inMemoryDataSourceBeans.xml" />

    <!-- Import the core hibernate files -->
    <import resource="classpath:hibernateCoreBeans.xml" />

    <!--
        Create the CXF client/server ourselves for testing purposes
    -->

    <!-- Import the resources from the class path as per usual -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <!-- Instantiate the jax-webservice endpoint -->
    <jaxws:endpoint implementor="me.alanfoster.employee.webservice.EmployeeWebservice" address="http://localhost:8090/EmployeeWebservice"/>

    <!-- Once we have set up all our own instances include the normal eai-context -->
    <import resource="eai-context.xml" />

</beans>