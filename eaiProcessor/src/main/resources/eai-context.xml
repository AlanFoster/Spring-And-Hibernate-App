<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
    ">

    <!-- Application Config property placeholder -->
    <bean id="eaiConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:eai.properties</value>
            </list>
        </property>
    </bean>

    <!-- Allow spring to load all components from our controllers package -->
    <context:component-scan base-package="me.alanfoster.employee.eai"/>

    <!-- Scan classes for annotations - In particular @Required and @Autowired -->
    <context:annotation-config />
    <!-- Handle @Transaction annotations -->
    <tx:annotation-driven />

    <!-- CXF web service client -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <jaxws:client id="webserviceClient" serviceClass="me.alanfoster.employee.webservice.IEmployeeWebservice" address="http://localhost:8090/EmployeeWebservice?wsdl" />

    <!-- Manually create an instance of the BathProcessor, and inject the dropBox locations -->
    <bean id="batchProcessor" class="me.alanfoster.employee.eai.BatchProcessor">
        <property name="dropBoxInput" value="${dropBox.input}"/>
        <property name="dropBoxOutput" value="${dropBox.output}" />
        <property name="employeeWebservice" ref="webserviceClient" />
    </bean>
</beans>